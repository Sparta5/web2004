"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _utils = require("../utils");

var _relation = require("../mixins/relation");

var _tabbar = _interopRequireDefault(require("../tabbar"));

var _tabbarItem = _interopRequireDefault(require("../tabbar-item"));

var _createNamespace = (0, _utils.createNamespace)('bottombar'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

var _default2 = createComponent({
  mixins: [(0, _relation.ParentMixin)('SpBottombar')],
  props: {
    //tabbar 选中效果
    value: {
      type: [Number, String],
      default: 0
    },
    //底部栏数据
    tabBarData: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    //tabBar参数
    tabBar: {
      type: Object,
      default: function _default() {
        return {};
      }
    }
  },
  computed: {
    //默认tabBar参数
    defaultProp: function defaultProp() {
      return {
        border: true,
        fixed: true,
        placeholder: false
      };
    }
  },
  methods: {
    /**
     * @description: 生成组件
     */
    tabBarSlots: function tabBarSlots() {
      var _this = this;

      var h = this.$createElement;
      //默认属性和传入来的合并
      var tabBar = (0, _extends2.default)({}, this.defaultProp, this.tabBar);
      return h(_tabbar.default, {
        "attrs": {
          "border": tabBar.border,
          "value": this.value,
          "fixed": tabBar.fixed,
          "active-color": tabBar.activeColor,
          "placeholder": tabBar.placeholder,
          "inactive-color": tabBar.inActiveColor,
          "before-change": tabBar.beforeChange
        },
        "on": {
          "change": function change(val) {
            _this.$emit('change', val);
          },
          "input": function input(val) {
            _this.$emit('input', val);
          }
        }
      }, [this.tabBarData.map(function (item) {
        return h(_tabbarItem.default, {
          "attrs": {
            "name": item.tabName,
            "icon-prefix": item.iconPrefix,
            "dot": item.dot,
            "badge": item.badge,
            "info": item.info,
            "url": item.url,
            "to": item.to,
            "replace": item.replace,
            "icon": item.icon
          },
          "scopedSlots": item.iconSlot ? {
            icon: function icon(props) {
              return h("img", {
                "attrs": {
                  "src": props.active ? item.iconSlot.active : item.iconSlot.inactive
                }
              });
            }
          } : ''
        }, [_this.slots() || item.name]);
      })]);
    }
  },
  render: function render() {
    var h = arguments[0];

    //通过 tabBarData 的 length 判断是否渲染 tabbar 栏
    if (this.tabBarData.length > 0) {
      return this.tabBarSlots();
    }

    return h("div", {
      "class": bem()
    }, [this.slots()]);
  }
});

exports.default = _default2;