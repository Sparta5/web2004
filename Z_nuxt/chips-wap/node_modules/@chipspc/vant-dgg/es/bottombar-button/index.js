import _extends from "@babel/runtime/helpers/esm/extends";

/*
 * @Author: zwh
 * @Date: 2020-10-09 16:35:48
 * @LastEditTime: 2020-10-15 10:43:17
 * @FilePath: \vant\src\bottombar-button\index.js
 */
import { createNamespace } from '../utils';
import { route, routeProps } from '../utils/router';
import { ChildrenMixin } from '../mixins/relation';
import Button from '../button';

var _createNamespace = createNamespace('bottombar-button'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

export default createComponent({
  mixins: [ChildrenMixin('SpBottombar')],
  props: _extends({}, routeProps, {
    //路由跳转属性 url to replace
    type: String,
    //按钮类型
    text: String,
    //按钮文本
    icon: String,
    //左侧图标名称或图片链接
    color: String,
    //按钮颜色，支持传入 linear-gradient 渐变色
    loading: Boolean,
    //是否显示为加载状态
    disabled: Boolean,
    //是否禁用按钮
    buttonTextSlot: Object //多层按钮文本

  }),
  computed: {},
  methods: {
    onClick: function onClick(event) {
      //抛出点击事件
      this.$emit('click', event); //路由跳转

      route(this.$router, this);
    },
    //生成多层按钮文本node
    buttonSlot: function buttonSlot() {
      var h = this.$createElement;
      var slot = this.buttonTextSlot;

      if (!!slot) {
        var vnode = h("slot", [h("div", {
          "class": bem('slot-top')
        }, [slot.top]), h("div", {
          "class": bem('slot-bottom')
        }, [slot.bottom])]);
        return vnode;
      } else {
        return this.slots() || this.text;
      }
    }
  },
  render: function render() {
    var h = arguments[0];
    return h(Button, {
      "class": bem([{
        first: true
      }, this.type]),
      "attrs": {
        "size": "large",
        "type": this.type,
        "icon": this.icon,
        "color": this.color,
        "loading": this.loading,
        "disabled": this.disabled
      },
      "on": {
        "click": this.onClick
      }
    }, [this.buttonSlot()]);
  }
});