import { createNamespace, isDef } from '../utils';
import Icon from '../icon';

var _createNamespace = createNamespace('safeguard'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

export default createComponent({
  props: {
    //标题
    title: String,
    //标题下的介绍文本
    text: String,
    //是否是成功
    success: Boolean,
    //超出隐藏
    ellipsis: Boolean,
    //列表
    options: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    //是否开启懒加载
    lazyRender: {
      type: Boolean,
      default: true
    },
    //图标传入类型
    iconPrefix: {
      type: String,
      default: 'sp-iconfont'
    }
  },
  methods: {},
  beforeCreate: function beforeCreate() {},
  render: function render() {
    var _this = this;

    var h = arguments[0];

    /**
     * 遍历列表
     */
    var Options = this.options.map(function (option) {
      return h("li", {
        "key": option.id || null
      }, [h("div", {
        "class": bem('icon')
      }, [h(Icon, {
        "attrs": {
          "class-prefix": _this.iconPrefix,
          "name": option.icon
        },
        "class": bem('color')
      })]), h("div", {
        "class": bem('cont')
      }, [h("div", {
        "class": [bem('title'), _this.ellipsis && bem('ellipsis')]
      }, [option.title]), h("div", {
        "class": bem('text')
      }, [option.text])])]);
    });
    return h("ul", {
      "class": bem('list')
    }, [Options]);
  }
});