// Utils
import { createNamespace } from '../utils'; // Mixins

import { ChildrenMixin } from '../mixins/relation';
import Icon from '../icon'; // 创建命名空间

var _createNamespace = createNamespace('work-tab-sort-item'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1]; // 创建子组件


export default createComponent({
  // 声明当前组件是vanTabSortSp的子组件
  mixins: [ChildrenMixin('SpWorkTabSort')],
  props: {},
  data: function data() {
    return {
      // 默认都不选中
      active: false,
      sort: 1 // 默认倒序

    };
  },
  mounted: function mounted() {
    this.sort = this.sort === -1 ? 1 : -1;
  },
  computed: {},
  methods: {
    // 点击子组件菜单的事件
    handleItemClick: function handleItemClick() {
      // 设置当前选中值的下标
      this.parent.itemIndex = this.index; // 修改每次切换后的状态

      if (this.active) {
        this.sort = this.sort === -1 ? 1 : -1;
      } // 将选择的数据传递给父组件,用以保存数据


      this.parent.onChange(this.slots()[0].text, this.name || this.index, this.sort);
    }
  },
  render: function render() {
    var h = arguments[0];
    // 返回子组件
    return h("div", {
      "class": bem({
        activeBottom: this.active && this.sort === -1,
        // 当前元素选中,并且是倒序
        active: this.active && this.sort === 1 // 当前元素选中,并且是正序

      }),
      "on": {
        "click": this.handleItemClick
      }
    }, [h("div", {
      "class": bem('item')
    }, [this.slots(), h("span", {
      "class": bem('span')
    }, [h(Icon, {
      "attrs": {
        "name": "play"
      },
      "class": bem('icon')
    })])])]);
  }
});